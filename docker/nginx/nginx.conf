user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # upstream definitions
    upstream frontend {
        server frontend:3000;
        keepalive 16;
    }

    upstream backend {
        server backend:1337;
        keepalive 16;
    }

    # ——————————————————————————
    # VHOST FRONTEND (Next.js)
    # ——————————————————————————
    server {
        listen       80 default_server;
        server_name  blog.mountain-experience.blog;

        # redirect HTTP→HTTPS se hai SSL
        # return 301 https://$host$request_uri;

        location / {
            proxy_pass         http://frontend;
            proxy_http_version 1.1;
            proxy_set_header   Host               $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto  $scheme;
            proxy_buffering    off;
        }

        # cache degli asset statici
        location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
            expires        30d;
            add_header     Cache-Control "public, no-transform";
            proxy_pass     http://frontend;
        }
    }

    # ——————————————————————————
    # VHOST BACKEND (Strapi)
    # ——————————————————————————
    server {
        listen       80;
        server_name  api.mountain-experience.blog;

        # return 301 https://$host$request_uri;

        # tutte le API e l’admin UI di Strapi
        location / {
            proxy_pass         http://backend;
            proxy_http_version 1.1;
            proxy_set_header   Host               $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto  $scheme;
            proxy_buffering    off;
        }

        # websocket / SSE (es. anteprime)
        location /socket.io/ {
            proxy_pass         http://backend/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade            $http_upgrade;
            proxy_set_header   Connection         "upgrade";
        }
    }
}
