services:
  postgres:
    image: postgres:13
    container_name: "postgres"
    restart: always
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_DB: strapi
    #volumes:
    #  - ./docker/postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"       # <-- aggiungi questa riga
    networks:
      - blog-network

  nginx:
    image: nginx:stable-alpine
    container_name: "nginx"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - blog-network
      
  backend:
    image: node:22-alpine
    container_name: "backend"
    ports:
      - '1337:1337'
    environment:
      # DATABASE_CLIENT: sqlite
      # DATABASE_FILENAME: './data.db'
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      JWT_SECRET: kjklfjasdHUY&/Â£&&&ggyt
      ADMIN_JWT_SECRET: ghjRTFSKijhj%77868GVHFFH
      APP_KEYS: hkGY557%$877FFDE
      STRAPI_INTERNAL_URL: 'http://backend:1337'
    networks:
      - blog-network
    volumes:
      - ./backend:/home/node/app
    #command: ["tail", "-f", "/dev/null"]
    working_dir: /home/node/app
    command: sh -c "npm run dev"

  frontend:
    image: node:22-alpine
    container_name: "frontend"
    ports:
      - '3000:3000'
    environment:
      NEXT_PUBLIC_API_URL: 'http://backend:1337'
    depends_on:
      - backend
    networks:
      - blog-network
    volumes:
      - ./frontend:/home/node/app
    #command: ["tail", "-f", "/dev/null"]
    working_dir: /home/node/app
    command: sh -c "npm start"

networks:
  blog-network:
    driver: bridge
